{"ast":null,"code":"import _slicedToArray from \"/Users/akankshajoshi/Documents/LAHacks2023/LAHacks2023/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/akankshajoshi/Documents/LAHacks2023/LAHacks2023/src/components/quiz/Flashquiz.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport FlashcardList from './FlashcardList';\nimport Flashcard from './Flashcard';\nimport axios from 'axios';\nimport './Flashcard.css';\nimport StudentClasses from \"../StudentHome.module.css\";\nimport StudentPageLayout from '../Layout/StudentPageLayout';\n\nfunction Flashquiz() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        flashcards = _useState2[0],\n        setFlashcards = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        categories = _useState4[0],\n        setCategories = _useState4[1];\n\n  const categoryEl = useRef();\n  const amountEl = useRef();\n  useEffect(() => {\n    // axios\n    //   .get('https://opentdb.com/api_category.php')\n    //   .then(res => {\n    //     setCategories(res.data.trivia_categories)\n    //   })\n    setCategories([{\n      \"id\": 1,\n      \"name\": \"Easy\"\n    }, {\n      \"id\": 2,\n      \"name\": \"Medium\"\n    }, {\n      \"id\": 3,\n      \"name\": \"Hard\"\n    }]);\n  }, []);\n  useEffect(() => {}, []);\n\n  function decodeString(str) {\n    const textArea = document.createElement('textarea');\n    textArea.innerHTML = str;\n    return textArea.value;\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    axios.get('https://opentdb.com/api.php', {\n      params: {\n        amount: amountEl.current.value,\n        category: categoryEl.current.value\n      }\n    }).then(res => {\n      setFlashcards(res.data.results.map((questionItem, index) => {\n        const answer = decodeString(questionItem.correct_answer);\n        const options = [...questionItem.incorrect_answers.map(a => decodeString(a)), answer];\n        return {\n          id: \"\".concat(index, \"-\").concat(Date.now()),\n          question: decodeString(questionItem.question),\n          answer: answer,\n          options: options.sort(() => Math.random() - .5)\n        };\n      }));\n    });\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(StudentPageLayout, {\n    menuSelect: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      marginTop: 20,\n      overflow: 'scroll',\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"header\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Category\"), React.createElement(\"select\", {\n    id: \"category\",\n    ref: categoryEl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, categories.map(category => {\n    return React.createElement(\"option\", {\n      value: category.id,\n      key: category.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, category.name);\n  }))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"amount\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Number of Questions\"), React.createElement(\"input\", {\n    type: \"number\",\n    id: \"amount\",\n    min: \"1\",\n    step: \"1\",\n    defaultValue: 10,\n    ref: amountEl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Generate\"))), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(FlashcardList, {\n    flashcards: flashcards,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })))));\n}\n\nexport default Flashquiz;","map":{"version":3,"sources":["/Users/akankshajoshi/Documents/LAHacks2023/LAHacks2023/src/components/quiz/Flashquiz.js"],"names":["React","useState","useEffect","useRef","FlashcardList","Flashcard","axios","StudentClasses","StudentPageLayout","Flashquiz","flashcards","setFlashcards","categories","setCategories","categoryEl","amountEl","decodeString","str","textArea","document","createElement","innerHTML","value","handleSubmit","e","preventDefault","get","params","amount","current","category","then","res","data","results","map","questionItem","index","answer","correct_answer","options","incorrect_answers","a","id","Date","now","question","sort","Math","random","marginTop","overflow","width","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport FlashcardList from './FlashcardList';\nimport Flashcard from './Flashcard';\nimport axios from 'axios'\nimport './Flashcard.css'\nimport StudentClasses from \"../StudentHome.module.css\";\nimport StudentPageLayout from '../Layout/StudentPageLayout';\n\nfunction Flashquiz() {\n  const [flashcards, setFlashcards] = useState([])\n  const [categories, setCategories] = useState([])\n\n  const categoryEl = useRef()\n  const amountEl = useRef()\n\n  useEffect(() => {\n    // axios\n    //   .get('https://opentdb.com/api_category.php')\n    //   .then(res => {\n    //     setCategories(res.data.trivia_categories)\n    //   })\n    setCategories([{\"id\":1,\"name\":\"Easy\"},{\"id\":2,\"name\":\"Medium\"},{\"id\":3,\"name\":\"Hard\"}]);\n\n  }, [])\n\n  useEffect(() => {\n   \n  }, [])\n\n  function decodeString(str) {\n    const textArea = document.createElement('textarea')\n    textArea.innerHTML= str\n    return textArea.value\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    axios\n    .get('https://opentdb.com/api.php', {\n      params: {\n        amount: amountEl.current.value,\n        category: categoryEl.current.value\n      }\n    })\n    .then(res => {\n      setFlashcards(res.data.results.map((questionItem, index) => {\n        const answer = decodeString(questionItem.correct_answer)\n        const options = [\n          ...questionItem.incorrect_answers.map(a => decodeString(a)),\n          answer\n        ]\n        return {\n          id: `${index}-${Date.now()}`,\n          question: decodeString(questionItem.question),\n          answer: answer,\n          options: options.sort(() => Math.random() - .5)\n        }\n      }))\n    })\n  }\n\n  return (\n    <>\n    <StudentPageLayout menuSelect=\"4\">\n        <div style={{marginTop: 20,overflow: 'scroll',width: '100%'}}>\n      <form className=\"header\" onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"category\">Category</label>\n          <select id=\"category\" ref={categoryEl}>\n            {categories.map(category => {\n              return <option value={category.id} key={category.id}>{category.name}</option>\n            })}\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"amount\">Number of Questions</label>\n          <input type=\"number\" id=\"amount\" min=\"1\" step=\"1\" defaultValue={10} ref={amountEl} />\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn\">Generate</button>\n        </div>\n      </form>\n      <div className=\"container\">\n        <FlashcardList flashcards={flashcards} />\n      </div>\n      </div>\n      </StudentPageLayout>\n    </>\n  );\n}\n\nexport default Flashquiz;\n"]},"metadata":{},"sourceType":"module"}